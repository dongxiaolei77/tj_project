<?xml version="1.0" encoding="UTF-8"?>
<job>
  <name>job_dwd_base_cust_info</name>
  <description/>
  <extended_description/>
  <job_version/>
  <directory>/</directory>
  <created_user>-</created_user>
  <created_date>2021/10/28 10:47:11.692</created_date>
  <modified_user>-</modified_user>
  <modified_date>2021/10/28 10:47:11.692</modified_date>
  <parameters>
    </parameters>
  <connection>
    <name>dw_base</name>
    <server>${dw_base_ip}</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>${dw_base_host}</database>
    <port>3306</port>
    <username>${dw_base_user}</username>
    <password>${dw_base_pass}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.autoReconnect</code>
        <attribute>true</attribute>
      </attribute>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.characterEncoding</code>
        <attribute>utf8</attribute>
      </attribute>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.serverTimezone</code>
        <attribute>UTC</attribute>
      </attribute>
      <attribute>
        <code>EXTRA_OPTION_MYSQL.useSSL</code>
        <attribute>false</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SQL_CONNECT</code>
        <attribute>set names utf8mb4;</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    </slaveservers>
  <job-log-table>
    <connection/>
    <schema/>
    <table/>
    <size_limit_lines/>
    <interval/>
    <timeout_days/>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file/>
  <entries>
    <entry>
      <name>Start</name>
      <description/>
      <type>SPECIAL</type>
      <attributes/>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>96</xloc>
      <yloc>256</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>per_cust_info</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>delete from dw_base.dwd_cust_per_base_info;
commit;
insert into dw_base.dwd_cust_per_base_info
select
distinct 
t1.id_no as per_cust_id,
t1.cust_name as per_cust_name,
round(datediff(curdate(), substring(t1.id_no,7,8))/365.2422) as age,
t1.id_no as cert_no,
left(trim(t2.cust_mobile),11) as tel_no,
coalesce(t1.live_address,card_address) as addr,
t3.item_stt,
'惠农云小程序' as data_source,
t1.create_time ,
t1.update_time
from (
select  *   from (
select  
id
,cust_code
,cust_name
,id_no
,id_type
,sex
,age
,marriage_status
,spouse_name
,spouse_id_no
,children_status
,education_status
,degree_status
,card_address
,live_address
,live_region
,hk_address
,has_doe
,f_explain
,`explain`
,creator
,create_time
,updator
,update_time
,create_name
,update_name
,delete_flag
,card_expire_date
from  dw_nd.ods_crm_cust_per_info  
where id_no is  not null and id_no &lt;&gt; '371702NA001980X'  order by update_time desc) a group by id_no )  t1
left join 
(
select * from (
select * from dw_nd.ods_crm_cust_info  where cust_type='01' order by update_time desc ) a group by id_no) t2
on t1.id_no=t2.id_no
left join 
(select distinct  *   from  dw_base.dwd_cust_guar_sts_day) t3
on t1.id_no=t3.cert_no
where left(t1.id_no,2) in 
(select   distinct left(province_code,2) as code from  dw_base.dim_chinese_district_code);
commit;
-- 加工重构后小程序

-- 加工潍坊联社客户信息
insert into dw_base.dwd_cust_per_base_info
select  
t1.per_cust_id,
t1.per_cust_name,
t1.age,
t1.cert_no,
left(trim(t2.contact_no),11) as tel_no,
t1.address as addr,
t3.item_stt,
'潍坊联社' as data_source,
curdate() as create_time,
curdate() as update_time
 from  (
select  
distinct id_no as per_cust_id,
cust_name as per_cust_name,
round(datediff(curdate(), date_format(substring(id_no,7,8),'%Y%m%d'))/365.2422) as age,
id_no as cert_no,
address
  from  dw_nd.ods_t_wfvln_ln_cust_info 
) t1 
inner join (select  distinct id_no,contact_no from  dw_nd.ods_t_wfvln_loan_info) t2
on t1.per_cust_id=t2.id_no 
left join (select distinct  *   from  dw_base.dwd_cust_guar_sts_day) t3
on t1.per_cust_id=t3.cert_no
where  left(t1.per_cust_id,2) in 
(select   distinct left(province_code,2) as code from  dw_base.dim_chinese_district_code)
-- 排除小程序注册客户
and t1.per_cust_id not in (select  distinct per_cust_id from dw_base.dwd_cust_per_base_info);
commit;

-- 加工台账表客户信息
insert into dw_base.dwd_cust_per_base_info
select  
distinct t1.cert_no as per_cust_id,
t1.cust_name as per_cust_name,
round(datediff(curdate(), date_format(substring(t1.cert_no,7,8),'%Y%m%d'))/365.2422) as age,
t1.cert_no,
t1.tel_no,
null  as addr,
t2.item_stt,
'担保台账' as data_source,
curdate() as create_time,
curdate() as update_time
from (select  *   from  (select cust_name,cert_no,tel_no from  dw_base.dwd_guar_info_all order by guar_id desc) a group by cert_no) t1
left join (select distinct  *   from  dw_base.dwd_cust_guar_sts_day) t2
on t1.cert_no=t2.cert_no
where
length(t1.cert_no)=18 
and t1.cert_no not in ('370406196628256014','371326198810444650') 
and substring(t1.cert_no,11,2)&lt;=12 
and substring(t1.cert_no,13,2)&lt;=31
and left(t1.cert_no,2) in 
(select   distinct left(province_code,2) as code from  dw_base.dim_chinese_district_code) 
-- 排除小程序注册客户和潍坊联社客户
and t1.cert_no not in (select  distinct per_cust_id from dw_base.dwd_cust_per_base_info);
-- select row_count() into @rowcnt;
commit;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>dw_base</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>320</xloc>
      <yloc>256</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>comp_cust_info</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>delete from  dw_base.dwd_cust_comp_base_info;
commit;

insert into dw_base.dwd_cust_comp_base_info
select 
distinct 
t1.id_no as comp_cust_id,
t3.cust_name as comp_cust_name,
case when t3.cust_name like '%公司%' then
replace(replace(replace(t3.cust_name,'有限公司',''),'股份有限公司',''),'有限责任公司','') 
when t3.cust_name like '%合作社%' then
replace(replace(replace(substring_index(substring_index(substring_index(t3.cust_name,'县',-1),'区',-1),'市',-1),'农民专业合作社',''),'经济合作社',''),'专业合作社','') 
else t3.cust_name end
as comp_simp_name,
t6.entStatus as comp_sts,
t1.id_no as cert_no,
t1.legal_person_name as legal_name,
t1.legal_person_id_no as legal_certno,
t1.legal_person_mobile as legal_telno,
null  as legal_addr,
t1.business_address as comp_addr,
t4.item_stt,
'惠农云小程序' as data_source,
t1.create_time,
t1.update_time
from (
select  *   from (
select  a.*,a.unified_social_credit_code as id_no  from  dw_nd.ods_crm_cust_comp_info  a where a.unified_social_credit_code is not null  order by update_time desc) a group by unified_social_credit_code )  t1
left join 
(select  *  from  (
 select   *   from  dw_nd.ods_extdata_fb_gszl -- 风报工商资料表
 order by createdate desc) a group by credit_code) t2
on t1.id_no=t2.credit_code 
left join 
(
select * from (
select * from dw_nd.ods_crm_cust_info  where cust_type='02' order by update_time desc ) a group by id_no) t3
on t1.unified_social_credit_code=t3.id_no
left join
-- 关联客户状态表 
(select distinct  *   from  dw_base.dwd_cust_guar_sts_day) t4
on t1.id_no=t4.cert_no
left join 
-- 关联企业状态（有数+风报）后续添加大数据局
(select distinct creditCode,entStatus from(
select * from (
select  distinct creditCode,case when entStatus='在营（开业）' then '在营' else entStatus end as entStatus ,createDate  from  dw_nd.ods_extdata_ys_qy_ryposfrlist 
where creditCode is not null and length(creditCode)=18 
union 
select distinct credit_code,registration_status,createdate 
from  dw_nd.ods_extdata_fb_gszl where registration_status is not null and credit_code is not null and length(credit_code)=18
) a order by createDate) a  group by creditCode) t6
on t1.id_no=t6.creditCode
where left(t1.id_no,2) not in 
(select   distinct left(province_code,2) as code from  dw_base.dim_chinese_district_code);
commit;

insert into dw_base.dwd_cust_comp_base_info
select  
distinct t1.cert_no as comp_cust_id,
t1.cust_name as comp_cust_name,
case when t1.cust_name like '%公司%' then
replace(replace(replace(t1.cust_name,'有限公司',''),'股份有限公司',''),'有限责任公司','') 
when t1.cust_name like '%合作社%' then
replace(replace(replace(substring_index(substring_index(substring_index(t1.cust_name,'县',-1),'区',-1),'市',-1),'农民专业合作社',''),'经济合作社',''),'专业合作社','') 
else t1.cust_name end
as comp_simp_name,
t4.entStatus as comp_sts,
t1.cert_no,
t2.legal_representative as legal_name,
null as legal_certno,
t1.tel_no as legal_telno,
null as legal_addr,
t2.address as comp_addr,
t3.item_stt,
'担保台账' as data_source,
curdate() as create_time,
curdate() as update_time
from (select  *   from  (select cust_name,cert_no,tel_no from  dw_base.dwd_guar_info_all order by guar_id desc) a group by cert_no) t1
left join (select  *  from  (
 select   *   from  dw_nd.ods_extdata_fb_gszl -- 风报工商资料表
 order by createdate desc) a group by credit_code) t2 
on t1.cert_no=t2.credit_code
left join (select distinct  *   from  dw_base.dwd_cust_guar_sts_day) t3
on t1.cert_no=t3.cert_no
left join 
-- 关联企业状态（有数）后续添加风报和大数据局
(select distinct creditCode,entStatus from(
select * from (
select  distinct creditCode,case when entStatus='在营（开业）' then '在营' else entStatus end as entStatus ,createDate  from  dw_nd.ods_extdata_ys_qy_ryposfrlist 
where creditCode is not null and length(creditCode)=18 
union 
select distinct credit_code,registration_status,createdate 
from  dw_nd.ods_extdata_fb_gszl where registration_status is not null and credit_code is not null and length(credit_code)=18
) a order by createDate) a  group by creditCode) t4
on t1.cert_no=t4.creditCode
where
length(t1.cert_no)=18 
and left(t1.cert_no,2) not in 
(select   distinct left(province_code,2) as code from  dw_base.dim_chinese_district_code) 
and length(t1.cust_name)>9
-- 排除小程序注册客户和潍坊联社客户
and t1.cert_no not in (select  distinct comp_cust_id from dw_base.dwd_cust_comp_base_info);
-- select row_count() into @rowcnt;
commit;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>dw_base</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>464</xloc>
      <yloc>256</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>cust_prj_risk_list</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>delete  from  dw_base.dwd_cust_prj_risk_list;
commit;
insert into dw_base.dwd_cust_prj_risk_list
select 
concat('crm',id) as proj_id,
cust_id_num as cert_no,
cust_name,
case when t2.code is not null then '自然人' else '法人或其他组织' end  as cust_type,
case when end_time is null then '1' else '0' end as is_reject_forever,
'拒绝' as risk_type,
concat('禁入客户名单-',case when ban_type='01' then '征信不良' when ban_type='02' then '虚假材料'
when ban_type='03' then '虚假数据' when ban_type='04' then '恶意逃废债务' when ban_type='05' then '冒名贷款'
when ban_type='06' then '贷款挪用' when ban_type='07' then '其他问题' end) 
as risk_reason,
date_format(start_time,'%Y-%m-%d') as begin_dt,
case when end_time is null then '9999-12-31' 
else date_format(end_time,'%Y-%m-%d') end as end_dt,
curdate() as create_time,
curdate() as update_time
from  dw_nd.ods_crm_ban_cust_list t1 
left join 
(select   distinct left(province_code,2) as code from  dw_base.dim_chinese_district_code) t2
on left(t1.cust_id_num,2)=t2.code;
commit;



-- 代偿相关
insert into dw_base.dwd_cust_prj_risk_list
select
t1.proj_code as proj_id,
t1.cust_identity_no as cert_no, 
t1.cust_name,
case when t2.code is not null then '自然人' else '法人或其他组织' end  as cust_type,
'1' as is_reject_forever,
'拒绝' as risk_type,
t1.reject_reason as risk_reason,
t1.begin_dt,
t1.end_dt,
curdate() as create_time,
curdate() as update_time
from 
(
		select  
		a.* 
		from 
		(
				select 
				distinct proj_code,
				cust_identity_no,
				cust_name,
				date_format(db_update_time,'%Y-%m-%d') as begin_dt,
				'9999-12-31' as end_dt,
				case when  status in ('00','10','20','30','40') then '代偿申请中'
				when status in ('99') then '历史代偿被拒绝'
				when status='50' then '历史已代偿'  end as reject_reason
				from  dw_nd.ods_t_proj_comp_aply where status is not null and status&lt;&gt;'98' order by db_update_time desc
		) a group by proj_code
) t1 left join 
(select   distinct left(province_code,2) as code from  dw_base.dim_chinese_district_code) t2
on left(t1.cust_identity_no,2)=t2.code;
commit;

-- 银行预警
insert into dw_base.dwd_cust_prj_risk_list
select 
distinct 
seq_id as proj_id,
id_number as cert_no,
cust_name,
case when t2.code is not null then '自然人' else '法人或其他组织' end as cust_type,
'1' as is_reject_forever,
'拒绝' as risk_type,
'历史银行预警' as risk_reason,
date_format(coalesce(s_warn_dt,loan_end_date),'%Y-%m-%d') as begin_dt,
'9999-12-31' as end_dt,
curdate() as create_time,
curdate() as update_time
from  dw_nd.ods_imp_portrait_info_new   t1
left join 
(select   distinct left(province_code,2) as code from  dw_base.dim_chinese_district_code) t2
on left(t1.id_number,2)=t2.code
where t1.s_risk_stt ='预警';
commit;

-- 当前本金或利息逾期
insert into dw_base.dwd_cust_prj_risk_list
select 
t1.ln_acctno as proj_id,
t2.cert_no,
t2.cust_name,
t2.cust_type,
'0' as is_reject_forever,
'拒绝' as risk_type,
t1.reject_reason as risk_reason,
t1.begin_dt,
t1.end_dt,
curdate() as create_time,
curdate() as update_time
from 
(
		select 
		distinct 
		ln_acctno,
    '借款本金或利息当前逾期' as reject_reason,
		date_format(curdate(),'%Y-%m-%d') as begin_dt,
		date_format(curdate(),'%Y-%m-%d') as end_dt
		from   dw_base.dwd_debt_bh_yq_ls_day 
		where yq_amt&lt;&gt;0
) t1 left join 
(
		select t1.*,case when t2.code is not null then '自然人' else '法人或其他组织' end as cust_type from
		(
				select 
				distinct ln_acctno, id_no as cert_no,cust_nm as cust_name from  dw_nd.ods_t_wfvln_loan_info
				union 
				select  distinct drawndn_seqno,id_number,customer_name
				from  dw_nd.ods_gcredit_loan_ac_dxloanbal 
				where prod_id='PA0080501' and customer_name is not null 
		)  t1 left join 
		(select   distinct left(province_code,2) as code from  dw_base.dim_chinese_district_code) t2
		on left(t1.cert_no,2)=t2.code
) t2 on t1.ln_acctno=t2.ln_acctno;
commit;



-- 本金历史逾期30天以上&amp;3次以上
insert into dw_base.dwd_cust_prj_risk_list
select 
t1.ln_acctno as proj_id,
t2.cert_no,
t2.cust_name,
t2.cust_type,
'0' as is_reject_forever,
'拒绝' as risk_type,
t1.reject_reason as risk_reason,
t1.begin_dt,
t1.end_dt,
curdate() as create_time,
curdate() as update_time
from 
(
		select
		ln_acctno, 
		min(date(gcq)) as begin_dt,
		date_add(min(date(gcq)),interval 2 year) as end_dt,
		'借款本金历史逾期30天以上' as reject_reason
		from dw_nd.ods_t_wfvln_capt_repay 
		where yq_days>30 group by ln_acctno
		union
		select  
		drawndn_seqno as ln_acctno,
		min(gcq) as begin_dt,
		date_add(min(date(gcq)),interval 2 year) as end_dt,
		'借款本金历史逾期30天以上' as reject_reason
		from 
		(
				select  
				drawndn_seqno,
				date_sub(date_format(update_time,'%Y-%m-%d'),interval 1 day) as gcq,
				case when over_prin&lt;&gt;0 then datediff(date_format(update_time,'%Y-%m-%d'),lastinte_date)-1 else 0 end as capt_yq_days,
				id_number as cert_no
				from  dw_nd.ods_gcredit_loan_ac_dxloanbal 
				where prod_id='PA0080501'  and over_prin&lt;&gt;0 and repay_status&lt;&gt;2
		) a where capt_yq_days>30 group by drawndn_seqno
		union all 
		select  
		ln_acctno, 
		date_add(qj,interval 1 day) as over_three_yq_begin_dt,  
		date_add(date_add(qj,interval 1 day),interval 2 year)  as over_three_yq_end_dt,
		'借款本金历史逾期3次以上' as reject_reason
		from 
		(
			select (@row_num:=case when @id=ln_acctno then @row_num+1 else 1 end) as rownum,t.*,
			@id:=ln_acctno,@last_dt := qj
			from 
			(
				select  date(qj) as qj,ln_acctno 
				from dw_base.dwd_debt_bh_yq_qc 
				where is_capt_yq=1
				order by ln_acctno,qj
			) t,(select  @row_num:=0,@id:='',@last_dt  := '') as a 
		) a where a.rownum=4
) t1
left join 
(
		select t1.*,case when t2.code is not null then '自然人' else '法人或其他组织' end as cust_type from
		(
				select 
				distinct ln_acctno, id_no as cert_no,cust_nm as cust_name from  dw_nd.ods_t_wfvln_loan_info
				union 
				select  distinct drawndn_seqno,id_number,customer_name
				from  dw_nd.ods_gcredit_loan_ac_dxloanbal 
				where prod_id='PA0080501' and customer_name is not null 
		)  t1 left join 
		(select   distinct left(province_code,2) as code from  dw_base.dim_chinese_district_code) t2
		on left(t1.cert_no,2)=t2.code
) t2 
on t1.ln_acctno=t2.ln_acctno;
commit;

-- 180天内，农担否决
insert into dw_base.dwd_cust_prj_risk_list
select
distinct   
guar_id as proj_id,
cert_no,
cust_name,
cust_type,
'0' as is_reject_forever,
'拒绝' as risk_type,
'180天内被农担否决' as risk_reason,
date_format(opera_tm,'%Y-%m-%d') as begin_dt,
date_add(date_format(opera_tm,'%Y-%m-%d'),interval 180 day) as end_dt,
curdate() as create_time,
curdate() as update_time
from  dw_base.dwd_guar_info_all 
where 
(item_stt= '已否决' and cur_node_name not in ('项目提报','提报人','签约收费')) or (item_stt='已终止' and aprv_amt=0);
commit;

-- 180天内被银行小程序通用策略或农担初审策略非业务控制类拒绝

insert into dw_base.dwd_cust_prj_risk_list
select
a.log_id as proj_id,
a.cust_id_no as cert_no,
cust_name,
case when cust_id_type='01' then '自然人' else '法人或其他组织' end as cust_type,
'0' as is_reject_forever,
'拒绝' as risk_type,
'180天内被银行小程序通用策略或农担初审策略非业务控制类拒绝' as risk_resion,
date_format(max(query_time),'%Y-%m-%d') as begin_dt,
date_add(date_format(max(query_time),'%Y-%m-%d'),interval 180 day) as end_dt,
curdate() as create_time,
curdate() as update_time
from
(  
	select  distinct t1.*  
	from  dw_nd.ods_t_sdnd_credit_log  t1
	left join
	(
			select  
			distinct log_id 
			from 
			(
					select  distinct a.log_id,substring_index(substring_index(a.reject_code,',',b.help_topic_id+1),',',-1) as reject_list
					from 
					(
							select *  from  dw_nd.ods_t_sdnd_credit_log where reject_code is not null  and reject_code like '%PD%'
							and  msg_code in ('RIM00800','RIM00801','RIM00802','RIM10290','RIM10291','RIM01001','RIM01002','RIM01003','RIM05200','RIM05300')
							and final_result in ('0','001')
					) a
					join dw_nd.dim_help_topic b 
					on b.help_topic_id &lt; (length(a.reject_code) - length(replace(a.reject_code,',',''))+1) 
			) a 
			where a.log_id not in 
			(
					select distinct log_id
					from
					( 
							select  distinct a.log_id,substring_index(substring_index(a.reject_code,',',b.help_topic_id+1),',',-1) as reject_list
							from 
							(
									select distinct *  from  dw_nd.ods_t_sdnd_credit_log where reject_code is not null  and reject_code like '%PD%'
									and  msg_code in 
                  ('RIM00800','RIM00801','RIM00802','RIM10290','RIM10291','RIM01001','RIM01002','RIM01003','RIM05200','RIM05300')
									and final_result in ('0','001')
							) a
							join dw_nd.dim_help_topic b 
							on b.help_topic_id &lt; (length(a.reject_code) - length(replace(a.reject_code,',',''))+1)

					) a where reject_list not like '%PD%'
			)
			union 
			select distinct log_id
			from  dw_nd.ods_t_sdnd_credit_log
			where 
      reject_code is not null  and  msg_code in 
      ('RIM00800','RIM00801','RIM00802','RIM10290','RIM10291','RIM01001','RIM01002','RIM01003','RIM05200','RIM05300')
			and final_result in ('0','001')
			and reject_code in 
			('P_PL_BWJK_002','P_PL_BWJK_003','P_PL_BWJK_004',
			'P_PL_BWJK_002,P_PL_BWJK_003,P_PL_BWJK_007',
			'P_PL_BWJK_002,P_PL_BWJK_004,P_PL_BWJK_007',
			'P_PL_BWJK_003,P_PL_BWJK_004,P_PL_BWJK_007')
	) t2 
	on t1.log_id=t2.log_id 
	where  t1.reject_code is not null 
	and  t1.msg_code in ('RIM00800','RIM00801','RIM00802','RIM10290','RIM10291','RIM01001','RIM01002','RIM01003','RIM05200','RIM05300')
	and t1.final_result in ('0','001')
	and t2.log_id is null
) a group by log_id;
commit;

insert into dw_base.dwd_cust_prj_risk_list
select
msg_id as proj_id,
cert_no,
cust_name,
case when cust_type='01' then '自然人' else '法人或其他组织' end as cust_type,
'0' as is_reject_forever,
'拒绝' as risk_type,
'180天内被银行小程序通用策略或农担初审策略非业务控制类拒绝' as risk_resion,
date_format(max(day_id),'%Y-%m-%d') as begin_dt,
date_add(date_format(max(day_id),'%Y-%m-%d'),interval 180 day) as end_dt,
curdate() as create_time,
curdate() as update_time
from
(
	select t1.*  from  dw_base.dwd_credit_qry_dtl  t1
	inner join 
	(
			SELECT distinct seqNum as msg_id
			FROM
			(
				select seqNum,
				case when p_bwjk_002_r_1>=10 or p_bwjk_002_r_2>=5 or p_bwjk_002_r_3>=10
				then 'P_BWJK_002' ELSE  '' END AS  reject_code1,
				case WHEN p_bwjk_003_r_1>=12  or p_bwjk_003_r_2>=3 or p_bwjk_003_r_3>=2  or p_bwjk_003_r_4>=10 or p_bwjk_003_r_5>=5
				then 'P_BWJK_003' ELSE  '' END AS  reject_code2,
				case WHEN p_bwjk_004_r_1>=6  or p_bwjk_004_r_2>=5
				then 'P_BWJK_004' ELSE  '' END AS  reject_code3
				FROM
				(
					select c.*,
					d.p_bwjk_003_r_1,
					d.p_bwjk_003_r_2,
					d.p_bwjk_003_r_3,
					d.p_bwjk_003_r_4,
					d.p_bwjk_003_r_5,
					e.p_bwjk_004_r_1,
					e.p_bwjk_004_r_2
					from 
				-- 百维多头注册

				(select  * from 
					(select
					seqNum,
					count( distinct  case when date(register_time) >='2019-01-01' and 
				date(register_time) &lt;='2020-12-31' and platform='2' then platform_code end ) as p_bwjk_002_r_1,    #指定两年内注册非银机构数
					 count( distinct  case when datediff(createDate,register_time)&lt;=180  then platform_code end ) as p_bwjk_002_r_2,  # 半年内注册机构数
				count( distinct  case when datediff(createDate,register_time)&lt;=30  then platform_code end ) as p_bwjk_002_r_3             # 30天内注册记录数
				from dw_nd.ods_extdata_bwfintech_duotou_reg   a
				group  by  seqNum)  b
				where p_bwjk_002_r_1>=10 or p_bwjk_002_r_2>=5 or p_bwjk_002_r_3>=10)  c
				left join 
				-- 百维多头申请
				(select  * from 
					(select
					seqNum,
				count(distinct case when datediff(createDate,application_time)&lt;=365  then platform_code end ) as p_bwjk_003_r_1, 
				count(distinct case when datediff(createDate,application_time)&lt;=30  then platform_code end ) as p_bwjk_003_r_2,
				count(distinct case  when datediff(createDate,application_time)&lt;=7 and platform='2' then platform_code end ) as p_bwjk_003_r_3,
				count(distinct case  when datediff(createDate,application_time)&lt;=365 and platform='2' then platform_code end ) as p_bwjk_003_r_4,
					count( distinct  case when date(application_time) >='2019-01-01' and 
					date(application_time) &lt;='2020-12-31' and platform='2' then platform_code end ) as p_bwjk_003_r_5
				from dw_nd.ods_extdata_bwfintech_duotou_loanapp   a
				group  by  seqNum)  b
				where p_bwjk_003_r_1>=12  or p_bwjk_003_r_2>=3 or p_bwjk_003_r_3>=2  or p_bwjk_003_r_4>=10 or p_bwjk_003_r_5>=5)  d

				on c.seqNum= d.seqNum

				left join
				-- 百维多头放款
				(select  * from 
					(select
					seqNum,
				count(distinct case when datediff(createDate,loanlenders_time)&lt;=180  then platform_code end ) as p_bwjk_004_r_1, 
				count(distinct case  when datediff(createDate,loanlenders_time)&lt;=180 and platform='2' then platform_code end ) as p_bwjk_004_r_2
				from dw_nd.ods_extdata_bwfintech_duotou_loanpass   a
				group  by  seqNum)  b
				where p_bwjk_004_r_1>=6  or p_bwjk_004_r_2>=5) e
				on c.seqNum= e.seqNum)  F
			)  H
	) t2 on t1.msg_id=t2.msg_id
	where  t1.reject_code&lt;&gt;'999' 
	and  t1.req_product_grp_code in 
('RIM00800','RIM00801','RIM00802','RIM10290','RIM10291','RIM01001','RIM01002','RIM01003')
	and t1.final_result in ('0','001')
  and reject_code in 
			('P_PL_BWJK_002','P_PL_BWJK_003','P_PL_BWJK_004',
			'P_PL_BWJK_002,P_PL_BWJK_003,P_PL_BWJK_007',
			'P_PL_BWJK_002,P_PL_BWJK_004,P_PL_BWJK_007',
			'P_PL_BWJK_003,P_PL_BWJK_004,P_PL_BWJK_007')
) a  group by  a.msg_id;
commit;

-- 黑名单客户关联人
insert into dw_base.dwd_cust_prj_risk_list
select 
t2.counter_guar_certno,
t2.counter_guar_certno,
t2.counter_guar_name,
case when t3.code is not null then '自然人' else '法人或其他组织' end  as cust_type,
'0' as is_reject_forever,
'预警' as risk_type,
t1.risk_reason,
t1.begin_dt,
t1.end_dt,
curdate() as create_time,
curdate() as update_time 
from 
(
		select  cert_no,min(begin_dt) as begin_dt, max(end_dt) as end_dt,concat(replace(group_concat( distinct risk_reason),',','&amp;'),'客户的反担保人') as risk_reason  from  dw_base.dwd_cust_prj_risk_list
		where  risk_type='拒绝' and risk_reason  in 
		('历史已代偿','代偿申请中','历史代偿被拒绝','借款本金或利息当前逾期','借款本金历史逾期30天以上','借款本金历史逾期3次以上')
		and date_format(curdate(),'%Y-%m-%d')&lt;=end_dt group by cert_no
) t1 
inner join 
(select  distinct debt_certno,counter_guar_certno,counter_guar_name from dw_nd.ods_imp_das_counter_guar_info) t2
on t1.cert_no=t2.debt_certno 
left join 
(select   distinct left(province_code,2) as code from  dw_base.dim_chinese_district_code) t3
on left(t2.counter_guar_certno,2)=t3.code;
commit;

-- 借款本金历史逾期3-30天&amp;借款利息历史逾期3次以上
insert into dw_base.dwd_cust_prj_risk_list
select 
t1.ln_acctno as proj_id,
t2.cert_no,
t2.cust_name,
t2.cust_type,
'0' as is_reject_forever,
'预警' as risk_type,
t1.reject_reason as risk_reason,
t1.begin_dt,
t1.end_dt,
curdate() as create_time,
curdate() as update_time
from 
(
		select
		ln_acctno, 
		min(date(gcq)) as begin_dt,
		date_add(min(date(gcq)),interval 2 year) as end_dt,
		'借款本金历史逾期3-30天' as reject_reason
		from dw_nd.ods_t_wfvln_capt_repay 
		where yq_days>3 and yq_days&lt;=30 group by ln_acctno
		union
		select  
		drawndn_seqno as ln_acctno,
		min(gcq) as begin_dt,
		date_add(min(date(gcq)),interval 2 year) as end_dt,
		'借款本金历史逾期3-30天' as reject_reason
		from 
		(
				select  
				drawndn_seqno,
				date_sub(date_format(update_time,'%Y-%m-%d'),interval 1 day) as gcq,
				case when over_prin&lt;&gt;0 then datediff(date_format(update_time,'%Y-%m-%d'),lastinte_date)-1 else 0 end as capt_yq_days,
				id_number as cert_no
				from  dw_nd.ods_gcredit_loan_ac_dxloanbal 
				where prod_id='PA0080501'  and over_prin&lt;&gt;0 and repay_status&lt;&gt;2
		) a where capt_yq_days>3 and capt_yq_days&lt;=30 group by drawndn_seqno
		union all 
		select  
		ln_acctno, 
		date_add(qj,interval 1 day) as over_three_yq_begin_dt,  
		date_add(date_add(qj,interval 1 day),interval 2 year)  as over_three_yq_end_dt,
		'借款利息历史逾期3次以上' as reject_reason
		from 
		(
			select (@row_num:=case when @id=ln_acctno then @row_num+1 else 1 end) as rownum,t.*,
			@id:=ln_acctno,@last_dt := qj
			from 
			(
				select  date(qj) as qj,ln_acctno 
				from dw_base.dwd_debt_bh_yq_qc 
				where is_int_yq=1 and int_max_yq_days>3
				order by ln_acctno,qj
			) t,(select  @row_num:=0,@id:='',@last_dt  := '') as a 
		) a where a.rownum=4
) t1
left join 
(
		select t1.*,case when t2.code is not null then '自然人' else '法人或其他组织' end as cust_type from
		(
				select 
				distinct ln_acctno, id_no as cert_no,cust_nm as cust_name from  dw_nd.ods_t_wfvln_loan_info
				union 
				select  distinct drawndn_seqno,id_number,customer_name
				from  dw_nd.ods_gcredit_loan_ac_dxloanbal 
				where prod_id='PA0080501' and customer_name is not null 
		)  t1 left join 
		(select   distinct left(province_code,2) as code from  dw_base.dim_chinese_district_code) t2
		on left(t1.cert_no,2)=t2.code
) t2 
on t1.ln_acctno=t2.ln_acctno;
-- select row_count() into @rowcnt;
commit;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>dw_base</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>752</xloc>
      <yloc>256</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>成功</name>
      <description/>
      <type>SUCCESS</type>
      <attributes/>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>896</xloc>
      <yloc>256</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>预审结果表</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>delete  from  dw_base.dwd_credit_qry_dtl where day_id=date_format(DATE_SUB(CURDATE(),INTERVAL 1 DAY),'%Y%m%d');
commit;
insert into dw_base.dwd_credit_qry_dtl 
select
distinct 
date_format(query_time,'%Y%m%d') as day_id,-- 数据日期
t2.msg_id,-- 报文ID 
t1.msg_code, 
t1.log_id, -- 日志ID
t1.query_time,-- 查询时间
t1.query_user_name,-- 查询用户名
t3.customer_id as cust_id,-- 客户ID
t1.cust_name,-- 客户名称
t1.cust_type,-- 客户类型
t1.cust_id_no as cert_no, -- 客户证件号码
t1.cust_mobile,-- 客户联系方式
t1.query_status,-- 查询状态
case when t1.final_result is null then '999' else t1.final_result end as final_result,-- 准入结果
case when t1.reject_code='' or t1.reject_code is null  then '999' else t1.reject_code end as reject_code ,-- 拒绝码
t2.req_user_id,-- 查询用户ID
t2.req_channel,-- 查询渠道
case when t2.req_product_grp_code in ('RIM00800','RIM00801','RIM00802') then 0 
     when t2.req_product_grp_code not  in ('RIM00800','RIM00801') then 1
end as is_online,-- 是否线上
t2.req_product_grp_code,-- 产品组编码
t2.res_code,-- 应答编码
t2.res_time,-- 应答时间
t1.creditor_amount as debet_amt,-- 债券数额
t1.warranty_amount as guar_amt,-- 担保金额
t1.report_code,-- 报告编码
t1.bds_bdc_cf_dec,-- 大数据查询结果
t1.bds_bdc_cnt_rlt,-- 不动产数量
t1.bds_bdc_cf_cnt_rlt,-- 不动产查封数量
t1.bds_bdc_cf_curr_cnt_rlt -- 不动产当前查封数量
from (select * from  dw_nd.ods_t_sdnd_credit_log where date_format(query_time,'%Y%m%d') =date_format(DATE_SUB(CURDATE(),INTERVAL 1 DAY),'%Y%m%d') and cust_id_no is not null and msg_code is not null  )  t1 
inner join 
(
	select  *  from  
	(
		select  *   from  dw_nd.ods_de_t_msg_log where req_product_grp_code
		in ('RIM00800','RIM00801','RIM00802','RIM10100','RIM10101','RIM10102','RIM10200','RIM10201','RIM10202','RIM10290','RIM10291','RIM01001','RIM01002','RIM01003','RIM01004','RIM09001')
		and date_format(res_time,'%Y%m%d')=date_format(DATE_SUB(CURDATE(),INTERVAL 1 DAY),'%Y%m%d') 
		-- and req_msg_seq_no='609e02dc02e8427eb9face78abb3a4e9'
		order by res_time
	) a 
	group by req_msg_seq_no
 ) t2
on t1.log_id=t2.req_msg_seq_no
left join (
select *  from( 
select   distinct cust_code as customer_id,id_no as main_id_no   from  dw_nd.ods_crm_cust_info
where id_no is not null 
order by customer_id desc
) a group by  main_id_no
)t3
on t1.cust_id_no=t3.main_id_no ;
commit;

delete  from  dw_base.dws_credit_qry_refuse where query_date=date_format(DATE_SUB(CURDATE(),INTERVAL 1 DAY),'%Y%m%d');
commit;
insert into dw_base.dws_credit_qry_refuse
select  
log_id,
date_format(a.query_time,'%Y%m%d') as query_date,
a.cust_type,
cust_name,
cert_no,
a.req_product_grp_code as product_code,
case when final_result in ('0','001') then '拒绝'
		 when final_result='1' then '通过'
		 when final_result in('002','003') then '转人工'
     when final_result='004' then '转法人' end as final_result,
a.reject_code
from  
	(
	select  *   from dw_base.dwd_credit_qry_dtl 
	where req_product_grp_code in ('RIM00800','RIM00801','RIM00802','RIM10290','RIM10291') 
	and final_result in ('001','002','003','004','0','1') 
	and date_format(query_time,'%Y%m%d')=date_format(DATE_SUB(CURDATE(),INTERVAL 1 DAY),'%Y%m%d')
	order by query_time desc
	) a 
group by date_format(a.query_time,'%Y%m%d'),a.cert_no,a.req_product_grp_code,a.final_result;
commit;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>dw_base</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>592</xloc>
      <yloc>304</yloc>
      <attributes_kjc/>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>cust_prj_risk_list</from>
      <to>成功</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>per_cust_info</from>
      <to>comp_cust_info</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>预审结果表</from>
      <to>cust_prj_risk_list</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>comp_cust_info</from>
      <to>预审结果表</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>comp_cust_info</from>
      <to>cust_prj_risk_list</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Start</from>
      <to>per_cust_info</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
  </hops>
  <notepads>
  </notepads>
  <attributes/>
</job>
